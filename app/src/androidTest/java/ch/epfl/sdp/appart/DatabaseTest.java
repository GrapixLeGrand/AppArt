package ch.epfl.sdp.appart;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import ch.epfl.sdp.appart.database.DatabaseService;
import ch.epfl.sdp.appart.database.FirestoreDatabaseService;
import ch.epfl.sdp.appart.database.FirestoreEmulatorDatabaseServiceWrapper;
import ch.epfl.sdp.appart.hilt.DatabaseModule;
import ch.epfl.sdp.appart.hilt.LoginModule;
import ch.epfl.sdp.appart.login.FirebaseEmulatorLoginServiceWrapper;
import ch.epfl.sdp.appart.login.FirebaseLoginService;
import ch.epfl.sdp.appart.login.LoginService;
import ch.epfl.sdp.appart.scrolling.card.Card;
import ch.epfl.sdp.appart.user.AppUser;
import ch.epfl.sdp.appart.user.User;
import dagger.hilt.android.testing.BindValue;
import dagger.hilt.android.testing.HiltAndroidRule;
import dagger.hilt.android.testing.HiltAndroidTest;
import dagger.hilt.android.testing.UninstallModules;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertThrows;

@UninstallModules(DatabaseModule.class)
@HiltAndroidTest
public class DatabaseTest {

    @Rule(order = 0)
    public HiltAndroidRule hiltRule = new HiltAndroidRule(this);

    @BindValue
    DatabaseService db = new FirestoreEmulatorDatabaseServiceWrapper(new FirestoreDatabaseService());

    @Before
    public void clearCache() {
        db.clearCache().join();
    }

    @Test
    public void addingCardsAndUpdateTest() {
        String id = "testID";
        String ownerID = "ownerTestID";
        String city = "Lausanne";
        long price = 1000;
        String imageURL = "fakeURL";

        Card card = new Card(id, ownerID, city, price, imageURL);
        db.putCard(card).join();

        List<Card> retrievedCards = db.getCards().join();

        //assertThat(retrievedCards.size(), is(1));

        Card retrievedCard = retrievedCards.get(0);

        //assertThat(retrievedCard.getId(), is(id)); //id generated by Firestore not testable I believe @ADG
        assertThat(retrievedCard.getCity(), is(city));
        assertThat(retrievedCard.getImageUrl(), is(imageURL));
        assertThat(retrievedCard.getPrice(), is(price));
        assertThat(retrievedCard.getUserId(), is(ownerID));

        retrievedCard.setCity("Zürich");

        db.updateCard(retrievedCard);

        retrievedCards = db.getCards().join();
        retrievedCard = retrievedCards.get(0);

        assertThat(retrievedCard.getCity(), is("Zürich"));
    }

    @Test
    public void putCardThrowsOnNull() {
        assertThrows(IllegalArgumentException.class, () -> db.putCard(null));
    }

    /*@Test
    public void addingUsersAndUpdateTest() {
        String email = "fakeemail@testappart.ch";
        String id = "userTestID";
        String name = "TestName";
        int age = 22;

        User user = new AppUser(id, email);
        user.setAge(age);
        user.setName(name);

        db.putUser(user);

        User retrievedUser = db.getUser(user.getUserId()).join();

        assertThat(retrievedUser.getUserEmail(), is(email));
    }*/
}
